stages:
  - test
  - deploy
  - Salsa-CI

tests-testing:
  stage: test
  image: debian:testing
  script:
    - apt-get update
    - apt-get build-dep -y .
    - dpkg-buildpackage -us -uc -tc

tests-unstable:
  stage: test
  image: debian:unstable
  script:
    - apt-get update
    - apt-get build-dep -Ppkg.debputy.ci -y .
    - dpkg-buildpackage -Ppkg.debputy.ci -us -uc -tc

tests-unstable-without-optional-bd:
  stage: test
  image: debian:unstable
  script:
    - apt-get update
    - apt-get build-dep -Ppkg.debputy.minimal-tests -y .
    - dpkg-buildpackage -Ppkg.debputy.minimal-tests -us -uc -tc

tests-unstable-coverage:
  stage: test
  image: debian:unstable
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  script:
    - apt-get update
    - apt-get build-dep -y .
    - apt-get install -y python3-pytest-cov
    - PYTHONPATH=. py.test-3 -v --cov --cov-branch --doctest-modules --junit-xml=xunit-report.xml --cov-report term --cov-report html:htmlcov --cov-report xml:coverage.xml
  after_script:
  - apt-get install python3-coverage
  - python3-coverage html
  artifacts:
    paths:
      - htmlcov
    reports:
      junit: xunit-report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

pages:
  stage: deploy
  script:
  - mkdir public
  - mv htmlcov public/
  dependencies:
    - tests-unstable-coverage
  artifacts:
    paths:
    - public
  only:
  - main

# Once all tests have passed, also run the Debian build and packaging quality
# assurance
build_deb:
   stage: Salsa-CI
   trigger:
     include: debian/salsa-ci.yml
